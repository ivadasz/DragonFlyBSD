;	@(#)syscalls.master	8.1 (Berkeley) 7/19/93
; $FreeBSD: src/sys/i386/linux/syscalls.master,v 1.30.2.8 2003/01/02 20:41:33 kan Exp $
; System call name/number master file (or rather, slave, from LINUX).
; Processed to create linux_sysent.c, linux_proto.h and linux_syscall.h.

; Columns: number type nargs namespc name alt{name,tag,rtyp}/comments
;	number	system call number, must be in order
;	type	one of STD, OBSOL, UNIMPL, COMPAT
;	name	psuedo-prototype of syscall routine
;		If one of the following alts is different, then all appear:
;	altname	name of system call if different
;	alttag	name of args struct tag if different from [o]`name'"_args"
;	altrtyp	return type if not int (bogus - syscalls always return int)
;		for UNIMPL/OBSOL, name continues with comments

; types:
;	STD	always included
;	COMPAT	included on COMPAT #ifdef
;	LIBCOMPAT included on COMPAT #ifdef, and placed in syscall.h
;	OBSOL	obsolete, not included in system, only specifies name
;	UNIMPL	not implemented, placeholder only

#include "opt_compat.h"
#include <sys/param.h>
#include <sys/sysent.h>
#include <sys/sysproto.h>
#include <emulation/linux/linux_sysproto.h>
#include "linux.h"
#include "linux_proto.h"

#include <emulation/43bsd/stat.h>

; Isn't pretty, but there seems to be no other way to trap nosys
#define	nosys	linux_nosys

; #ifdef's, etc. may be included, and are copied to the output files.

0	NOPROTO	{ int read(int fd, char *buf, u_int nbyte); }
1	NOPROTO	{ int write(int fd, char *buf, u_int nbyte); }
2	STD	{ int linux_open(char *path, l_int flags, \
				l_int mode); }
3	NOPROTO { int close(int fd); }
4	STD	{ int linux_stat64(char *filename, \
				struct l_stat64 *statbuf, l_long flags); }
5	STD	{ int linux_fstat64(l_ulong fd, \
				struct l_stat64 *statbuf, l_long flags); }
6	UNIMPL	lstat
7	UNIMPL	poll
8	STD	{ int linux_lseek(l_uint fdes, l_off_t off, \
				l_int whence); }
9	STD	{ int linux_mmap2(l_ulong addr, l_ulong len, \
				l_ulong prot, l_ulong flags, l_ulong fd, \
				l_ulong pgoff); }
10	UNIMPL	mprotect
11	UNIMPL	munmap
12	STD	{ int linux_brk(l_ulong dsend); }
13	STD	{ int linux_rt_sigaction(l_int sig, \
				l_sigaction_t *act, l_sigaction_t *oact, \
				l_size_t sigsetsize); }
14	STD	{ int linux_rt_sigprocmask(l_int how, \
				l_sigset_t *mask, l_sigset_t *omask, \
				l_size_t sigsetsize); }
15	STD	{ int linux_rt_sigreturn(struct l_ucontext *ucp); }
16	STD	{ int linux_ioctl(l_uint fd, l_uint cmd, \
				l_ulong arg); }
17	UNIMPL	pread64
18	UNIMPL	pwrite64
19	NOPROTO	{ int readv(int fd, struct iovec *iovp, \
				u_int iovcnt); }
20	NOPROTO	{ int writev(int fd, struct iovec *iovp, \
				u_int iovcnt); }
21	UNIMPL	access
22	UNIMPL	pipe
23	UNIMPL	select
24	UNIMPL	sched_yield
25	UNIMPL	mremap
26	UNIMPL	msync
27	UNIMPL	mincore
28	UNIMPL	madvise
29	UNIMPL	shmget
30	UNIMPL	shmat
31	UNIMPL	shmctl
32	UNIMPL	dup
33	UNIMPL	dup2
34	UNIMPL	pause
35	UNIMPL	nanosleep
36	UNIMPL	getitimer
37	UNIMPL	alarm
38	UNIMPL	setitimer
39	STD	{ int linux_getpid(void); }
40	UNIMPL	sendfile
41	UNIMPL	socket
42	UNIMPL	connect
43	UNIMPL	accept
44	UNIMPL	sendto
45	UNIMPL	recvfrom
46	UNIMPL	sendmsg
47	UNIMPL	recvmsg
48	UNIMPL	shutdown
49	UNIMPL	bind
50	UNIMPL	listen
51	UNIMPL	getsockname
52	UNIMPL	getpeername
53	UNIMPL	socketpair
54	UNIMPL	setsockopt
55	UNIMPL	getsockopt
56	UNIMPL	clone
57	UNIMPL	fork
58	UNIMPL	vfork
59	STD	{ int linux_execve(char *path, char **argp, \
				char **envp); }
60	NOPROTO	{ void exit(long rval); }
61	UNIMPL	wait4
62	STD	{ int linux_kill(l_int pid, l_int signum); }
63	STD	{ int linux_newuname(struct l_new_utsname *buf); }
64	UNIMPL	semget
65	UNIMPL	semop
66	UNIMPL	semctl
67	UNIMPL	shmdt
68	UNIMPL	msgget
69	UNIMPL	msgsnd
70	UNIMPL	msgrcv
71	UNIMPL	msgctl
72	UNIMPL	fcntl
73	UNIMPL	flock
74	UNIMPL	fsync
75	UNIMPL	fdatasync
76	UNIMPL	truncate
77	UNIMPL	ftruncate
78	UNIMPL	getdents
79	UNIMPL	getcwd
80	STD	{ int linux_chdir(char *path); }
81	UNIMPL	fchdir
82	UNIMPL	rename
83	UNIMPL	mkdir
84	UNIMPL	rmdir
85	UNIMPL	creat
86	UNIMPL	link
87	UNIMPL	unlink
88	UNIMPL	symlink
89	UNIMPL	readlink
90	UNIMPL	chmod
91	UNIMPL	fchmod
92	UNIMPL	chown
93	UNIMPL	fchown
94	UNIMPL	lchown
95	UNIMPL	umask
96	UNIMPL	gettimeofday
97	UNIMPL	getrlimit
98	UNIMPL	getrusage
99	UNIMPL	sysinfo
100	UNIMPL	times
101	UNIMPL	ptrace
102	UNIMPL	getuid
103	UNIMPL	syslog
104	UNIMPL	getgid
105	UNIMPL	setuid
106	UNIMPL	setgid
107	UNIMPL	geteuid
108	UNIMPL	getegid
109	UNIMPL	setpgid
110	UNIMPL	getppid
111	UNIMPL	getpgrp
112	UNIMPL	setsid
113	UNIMPL	setreuid
114	UNIMPL	setregid
115	UNIMPL	getgroups
116	UNIMPL	setgroups
117	UNIMPL	setresuid
118	UNIMPL	getresuid
119	UNIMPL	setresgid
120	UNIMPL	getresgid
121	UNIMPL	getpgid
122	UNIMPL	setfsuid
123	UNIMPL	setfsgid
124	UNIMPL	getsid
125	UNIMPL	capget
126	UNIMPL	capset
127	UNIMPL	rt_sigpending
128	UNIMPL	rt_sigptimedwait
129	UNIMPL	rt_sigqueueinfo
130     STD     { int linux_rt_sigsuspend(l_sigset_t *newset, \
				l_size_t sigsetsize); }
131	UNIMPL	sigaltstack
132	UNIMPL	utime
133	UNIMPL	mknod
134	UNIMPL	uselib
135	UNIMPL	personality
136	UNIMPL	ustat
137	UNIMPL	statfs
138	UNIMPL	fstatfs
139	UNIMPL	sysfs
140	UNIMPL	getpriority
141	UNIMPL	setpriority
142	UNIMPL	sched_setparam
143	UNIMPL	sched_getparam
144	UNIMPL	sched_setscheduler
145	UNIMPL	sched_getscheduler
146	UNIMPL	sched_get_priority_max
147	UNIMPL	sched_get_priority_min
148	UNIMPL	sched_rr_get_interval
149	UNIMPL	mlock
150	UNIMPL	munlock
151	UNIMPL	mlockall
152	UNIMPL	munlockall
153	UNIMPL	vhangup
154	UNIMPL	modify_ldt
155	UNIMPL	pivot_root
156	UNIMPL	sysctl
157	UNIMPL	prctl
158	STD	{ int linux_arch_prctl(l_int code, l_ulong addr); }
159	UNIMPL	adjtimex
160	UNIMPL	setrlimit
161	UNIMPL	chroot
162	UNIMPL	sync
163	UNIMPL	acct
164	UNIMPL	settimeofday
165	UNIMPL	mount
166	UNIMPL	umount2
167	UNIMPL	swapon
168	UNIMPL	swapoff
169	UNIMPL	reboot
170	UNIMPL	sethostname
171	UNIMPL	setdomainname
172	UNIMPL	iopl
173	UNIMPL	ioperm
174	UNIMPL	create_module
175	UNIMPL	init_module
176	UNIMPL	delete_module
177	UNIMPL	get_kernel_syms
178	UNIMPL	query_module
179	UNIMPL	quotactl
180	UNIMPL	nfsservctl
181	UNIMPL	getpmsg
182	UNIMPL	putpmsg
183	UNIMPL	afs_syscall
184	UNIMPL	tuxcall
185	UNIMPL	security
186	UNIMPL	gettid
187	UNIMPL	linux_readahead
188	UNIMPL	setxattr
189	UNIMPL	lsetxattr
190	UNIMPL	fsetxattr
191	UNIMPL	getxattr
192	UNIMPL	lgetxattr
193	UNIMPL	fgetxattr
194	UNIMPL	listxattr
195	UNIMPL	llistxattr
196	UNIMPL	flistxattr
197	UNIMPL	removexattr
198	UNIMPL	lremovexattr
199	UNIMPL	fremovexattr
200	STD	{ int linux_tkill(int tid, int sig); }
201	UNIMPL	time
202	UNIMPL	futex
203	UNIMPL	sched_setaffinity
204	UNIMPL	sched_getaffinity
205	UNIMPL	set_thread_area
206	UNIMPL	io_setup
207	UNIMPL	io_destroy
208	UNIMPL	io_getevents
209	UNIMPL	io_submit
210	UNIMPL	io_cancel
211	UNIMPL	get_thread_area
212	UNIMPL	lookup_dcookie
213	UNIMPL	epoll_create
214	UNIMPL	epoll_ctl_old
215	UNIMPL	epoll_wait_old
216	UNIMPL	remap_file_pages
217	UNIMPL	getdents64
218	UNIMPL	set_tid_address
219	UNIMPL	restart_syscall
220	UNIMPL	semtimedop
221	UNIMPL	fadvise64
222	UNIMPL	linux_timer_create
223	UNIMPL	timer_settime
224	UNIMPL	timer_gettime
225	UNIMPL	timer_getoverrun
226	UNIMPL	timer_delete
227	UNIMPL	clock_settime
228	UNIMPL	clock_gettime
229	UNIMPL	clock_getres
230	UNIMPL	clock_nanosleep
231	UNIMPL	exit_group
232	UNIMPL	epoll_wait
233	UNIMPL	epoll_ctl
234	STD	{ int linux_tgkill(int tgid, int pid, int sig); }
235	UNIMPL	utimes
236	UNIMPL	vserver
237	UNIMPL	mbind
238	UNIMPL	set_mempolicy
239	UNIMPL	get_mempolicy
240	UNIMPL	mq_open
241	UNIMPL	mq_unlink
242	UNIMPL	mq_timedsend
243	UNIMPL	mq_timedreceive
244	UNIMPL	mq_notify
245	UNIMPL	mq_getsetattr
246	UNIMPL	kexec_load
247	UNIMPL	waitid
248	UNIMPL	add_key
249	UNIMPL	request_key
250	UNIMPL	keyctl
251	UNIMPL	ioprio_set
252	UNIMPL	ioprio_get
253	UNIMPL	inotify_init
254	UNIMPL	inotify_add_watch
255	UNIMPL	inotify_rm_watch
256	UNIMPL	migrate_pages
257	UNIMPL	openat
258	UNIMPL	mkdirat
259	UNIMPL	mknodat
260	UNIMPL	fchownat
261	UNIMPL	futimesat
262	UNIMPL	newfstatat
263	UNIMPL	unlinkat
264	UNIMPL	renameat
265	UNIMPL	linkat
266	UNIMPL	symlinkat
267	UNIMPL	readlinkat
268	UNIMPL	fchmodat
269	UNIMPL	faccessat
270	UNIMPL	pselect6
271	UNIMPL	ppoll
272	UNIMPL	unshare
273	UNIMPL	set_robust_list
274	UNIMPL	get_robust_list
275	UNIMPL	splice
276	UNIMPL	tee
277	UNIMPL	sync_file_range
278	UNIMPL	vmsplice
279	UNIMPL	move_pages
280	UNIMPL	utimensat
281	UNIMPL	epoll_pwait
282	UNIMPL	signalfd
283	UNIMPL	timerfd_create
284	UNIMPL	eventfd
285	UNIMPL	fallocate
286	UNIMPL	timerfd_settime
287	UNIMPL	timerfd_gettime
288	UNIMPL	accept4
289	UNIMPL	signalfd4
290	UNIMPL	eventfd2
291	UNIMPL	epoll_create1
292	UNIMPL	dup3
293	UNIMPL	pipe2
294	UNIMPL	inotify_init1
295	UNIMPL	linux_preadv
296	UNIMPL	linux_pwritev
297	UNIMPL	rt_tgsigqueueinfo
298	UNIMPL	perf_event_open
299	UNIMPL	recvmmsg
300	UNIMPL	fanotify_init
301	UNIMPL	fanotify_mark
302	UNIMPL	prlimit64
303	UNIMPL	name_to_handle_at
304	UNIMPL	open_by_handle_at
305	UNIMPL	clock_adjtime
306	UNIMPL	syncfs
307	UNIMPL	sendmmsg
308	UNIMPL	setns
309	UNIMPL	getcpu
310	UNIMPL	process_vm_readv
311	UNIMPL	process_vm_writev
